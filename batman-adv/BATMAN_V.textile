h1. B.A.T.M.A.N. V

h2. 1. Introduction

B.A.T.M.A.N. V uses the Originator Messages version 2 (OGMv2) to make routing decisions and  transport information about mesh participants through the whole mesh. It is complemented by the [[ELP|Echo Location Protocol(ELP)]] which is used for neighbor sensing. The previous versions of the B.A.T.M.A.N. protocols (version I to IV) used the original OGM messages for both neighbor sensing and route finding.

The new OGM2 protocol bears the following advantages:

 * Reduced overhead, as OGMs can then be sent with a slower interval. The BATMAN routing algorithm still has a squared amount of overhead in worst case scenarios, therefore the the slower intervals are very desireable.
 * Neighbor sensing and metric data collection can be performed individually, at different intervals or even different techniques
 * Efforts for multiple interfaces handling can be reduced
 * The BATMAN core routing protocol becomes less entangled with other mechanisms and features, making it easier understand and to perform theoretical analysis on.





*Metric:* Estimated throughput (from RC algorithm for wireless devices). At the moment the used metric is the *current bitrate multiplied for the probability of success*. In the beginning the throughput directly estimated by the RC algorithm has been tested but it turned out to be too unstable for this purpose.
*Neighbour Discovery:* [[ELP|ELP (Echo Locating Protocol)]]
*Path Metric Computation:* [[Ogm-v2|OGMv2]]

h2. General Overviev
This is a draft of how the algorithm should work and what it needs.
Later all this information will be split and reported into the proper pages (e.g. ELP or OGMv2)

* ELP bandwidth aware
** Broadcast message for neighbour discovery (one per interface). [Beacon might be used on wifi interfaces]
** Unicast message for thgoughput sampling (two per neighbour). This is useful when there is no traffic towards a given neighbor.
* OGMv2
** Broadcast message for metric propagation:
*** one OGM per interface is sent when the node generates the OGM
*** one OGM per interface is sent when the node is forwarding *one* received OGM


h2. One Hop Throughput Estimation

* *wireless*: estimated datarate. For details read at the top of this page.
* *wired*: ethtool for half/full duplex and theoretical bandwidth (this may be falsified by Ethernet bridges in the LAN).
* *Unknown/VPN*: 1Mbps (customisable via sysfs)
* *generic*: the [[bandwidth_meter_protocol|bandwidth meter]] might be used to estimate the real (current) throughtput on non-wireless interfaces
* *forced by the user*: the user can manually override the throughput estimation and set a fake value for each *interface*

h2. Metric reception

When an OGM is received the metric towards the originator is computed as the minimum between the value contained into the OGM and the metric of the link where the message has been received from

h2. Metric forwarding

When forwarding an OGM the metric is decremented as follows:
* new_metric = metric / 2 (if incoming interface is half-duplex
* new_metric = metric * (1 - hop_penalty) otherwise
