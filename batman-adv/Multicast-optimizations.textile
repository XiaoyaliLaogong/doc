h1. Basic Multicast Optimizations

Multicast allows to transmit data to a group of receivers, unlike unicast which transmits to just one receiver and broadcast which transmits to everyone. Multicast is used for applications like IPTV, internet radio or group communication. Also IPv6 relies on multicast for its basic services.

Without optimization, switches (including batman-adv) typically implement multicast as broadcast: if everyone gets the packet, all group members get it too. Therefore all layer 2 switches are automatically multicast compatible, but that comes with a cost: even if there are only a few multicast listeners interested, the whole mesh network is unnecessarily bothered with these multicast packets. Broadcast transmissions are particularly expensive operations in wifi and wireless mesh networks (in terms of bandwidth), and therefore optimizing multicast to only send to group members will greatly improve performance for these services.

The first step to optimize multicast is to find out who is in which multicast group. Fortunately, IP multicast provides mechanisms to learn about the presence and amount of these so called multicast listeners. This is interesting for layer 3 IP multicast routers, but also professional layer 2 switches make use of this to reduce multicast overhead, advertising these products as "multicast aware" or "IGMP/MLD snooping switches".

Looking at the multicast traffic more thoroughly often reveals that most of this multicast traffic is actually only having one, two or even zero hosts interested in it. Therefore optimizing these cases is the first step, with more sophisticated optimizations to be implemented later.

h2. Overview

The current multicast optimizations in batman-adv provides a basic infrastructure for multicast awareness and therefore reduced multicast overhead in some setups.

So far, this basic optimization reduces overhead in the following two ways:

h3. Discards IPv4/IPv6 packets with no multicast listener

!{width: 66%25;}basic-multicast-no-receiver.png!

batman-adv detects whether there are any potential IPv4/IPv6 multicast listeners interested in traffic to the according multicast destination address. If not then the packet is never forwarded into the mesh network.

h3. Forwards IPv4/IPv6 packets with a single multicast listener via unicast

!{width: 66%25;}basic-multicast-single-receiver.png!

If a single multicast listener was detected then the packet is forwarded directly to the according batman-adv node.


h3. Limitations

!{width: 66%25;}basic-multicast-multiple-receivers.png!

In the following cases multicast packets are still distributed via classic flooding:

* If there is more than one listener for a specific multicast group.
* If there is a node with a Linux bridge on top of its batman-adv interface.
* If the multicast packets have a scope greater than link-local.

(These things are work in progress and will be supported at a later time.)


h2. How to activate the basic multicast optimizations?

By default they are activated. You can force the old behaviour, classic flooding of all multicast frames, on a certain node via the following command, executed as root (here: bat0):

<pre>echo 0 > /sys/class/net/bat0/mesh/multicast_mode</pre>

Note: This only affects multicast traffic originating from this specific node.

h2. Further Readings

* [[Basic-multicast-optimizations-tech|Basic Multicast Optimizations – Technical Description]]
* [[Basic-multicast-optimizations-flags|Basic Multicast Optimizations – Flags Explained]]