h1. Kmalloc vs. Kmem-cache Tests

h2. Abstract

In various, larger Freifunk mesh communities some issues happening after a certain broadcast domain size threshold occured. 32MB of RAM devices start to have load issues and reboot frequently with a "Gluon 2016.1.3":https://github.com/freifunk-gluon/gluon/ (batman-adv 2015.1) firmware "once they reach about 3100 clients":https://github.com/freifunk-gluon/gluon/issues/753 (3100 entries in the global translation table).

While several other changes probably introduced a higher memory usage (e.g. switch to FQ-Codel with OpenWRT Chaos Calmer, larger kernel, ...), too, the possibilities to increase efficiency of the translation table by kmem-cache-alloc() instead of kmalloc() was considered and is the focus of of this article.

Some information about kmem-cache can be found "here":https://static.lwn.net/images/pdf/LDD3/ch08.pdf. General information about kmem-caches can usually be found in /proc/slabinfo (if the kernel was compiled with slabinfo support).

h2. Test setup

h3. Hardware & Connectivity

!kmalloc-kmem-cache-setup.png!

The test setup consists of two machines:

* WLAN-Mesh-Router: TP-Link TL-WR841ND v8, 32MB RAM
* x86_64 PC: 3x ethernet interfaces, 8GB RAM

Those two devices are connected via two network cables. One dedicated for polling the status from and controlling the embedded device. The other one dedicated for the batman-adv mesh. Finally the x86 PC has a third ethernet interface for external access to control and monitor the tests.

h3. Software & Configuration

* WLAN-Mesh-Router:

  * Gluon v2016.1.3
  * Gluon site config from Freifunk Rhein-Neckar, v0.5.4
  * batman-adv v2016.1

* x86_64 PC:

  * Debian Sid
  * 3.16 Linux kernel
  * batman-adv v2016.1

For the embedded device, WLAN-Mesh-Router, two patches were added to Gluon/batman-adv:

* Upgrade to batman-adv v2016.1 (Gluon / OpenWRT CC currently provides v2015.1 for the package feed)
* Global translation table count patch (outputs the number of global TT objects via debugfs directly)

Next to these two patches, three variants for the image for the embedded device were created:

* kmalloc (vanilla, uses kmalloc() for TT)
* kmem-cache-aligned (Sven's original patch, with SLAB_HWCACHE_ALIGN flag)
* kmem-cache-unaligned (Sven's patch but with no SLAB_HWCACHE_ALIGN flag)