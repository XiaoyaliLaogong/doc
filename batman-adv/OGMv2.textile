h1. Originator Message (OGM)

??This page is work-in-progress and will state the BATMAN V algorithm later.??
It is a rework based on the original [[OGM]] page and will supercede it after completion.

h2. 1. Introduction

The B.A.T.M.A.N. protocol originally only used a single message type (called OGM) to determine the link qualities to the direct neighbors and spreading these link quality information through the whole mesh. This procedure is summarized on the [[open-mesh:BATMANConcept|BATMAN concept page]] and explained in details in "the RFC draft":http://tools.ietf.org/html/draft-wunderlich-openmesh-manet-routing-00 published in 2008.

With the new concept of a separate [[ELP|ELP]] the tasks performed by OGMs becomes way simpler: It only determines and choses the best router towards another originator without having any knowledge about possibly multiple interfaces, while any link specific work is done by ELP.

This bears the following advantages from the OGM point of view:
* Reduced overhead, as OGMs can then be send with a slower interval. The BATMAN routing algorithm still has a squared amount of overhead in worst case scenarios, therefore the the slower intervals are very desireable.
* The BATMAN core routing protocol becomes less entangled with other mechanisms and features, making it easier understand and to perform theoretical analysis on.



h2. 2. Definitions

* Node - A mesh router which utilizes the B.A.T.M.A.N. protocol as specified in this document on at least one network interface.
* originator - A node broadcasting its own OGMs (see [[OGM#41-Broadcasting-own-Originator-Message-OGM|section 4.1]] for details)  that is therefore addressable within the mesh network routing layer. It is uniquely identifiable by its originator address. [[/|B.A.T.M.A.N.-Advanced]] uses the MAC address of its primary hard interface.
* hard interface - Network interface utilized by B.A.T.M.A.N. for its own ethernet frames.
* sliding window - Sequence numbers are recorded in dedicated sliding windows until they are considered out-of range. Thus, such a sliding window always contains the set of recently received sequence numbers. The amount of sequence numbers recorded in the sliding window is used as a metric for the quality of detected links and paths.
* duplicate - A received OGM message from a neighbor containing an already received sequence number.
* out of order - A received OGM message from a neighbor containing a sequence number that is older than the newest sequence number ever received from this neighbor.
* Neighbor: An originator within one hop distance.
* Router: A neighbor which is a potential, loop-free next hop for forwarding data packets towards a specific originator.
* link TQ: link TQ from one interface to a neighbor's interface (see ELP for details).
* best link TQ: The best of all link TQ values towards a neighbor (see ELP for details).
* path TQ:  The incoming OGM's TQ multiplied with the best link TQ of the according neighbor.
* Originator entry: Local data structure in the originator list (see 'Conceptual Data Structures' for details).
* Router entry: Local data structure in the router list (see 'Conceptual Data Structures' for details).

The TQ is a number between zero (worst) and one (best). A TQ in a packet is linearly mapped to one byte, 0x00 representing a zero TQ, 0xFF a TQ of one.

h2. 3. Conceptual Data Structures

h3. 3.1. Originator List

An originator list holds all addressable and to a certain degree reachable originators within the mesh network. The Originator Address and Selected Router fields of this list are of special interest for the actual routing decisions upon incoming data packets.

* Originator Address: The originator address of the node.
* Originator's Sequence Number: The newest OGM Sequence Number that has been accepted from the given Originator.
* Router List: A list of potential routers towards an originator
* Selected Router: A router from the Router List which is chosen as the next hop to forward data packets to for the according originator.

h3. 3.2 Router List

A router list holds all potential routers, routers that might be switched to at any time without creating a routing loop. An entry buffers the newest, valid OGM from the according router and according originator of the OGM to be able to rebroadcast an OGM later when switching to another potential router.

* Router Originator Address: Originator address of the router an OGM was received from.
* Rebroadcasted: This flag indicates whether the current Router Entry settings have been rebroadcasted yet.
* Received OGM, the following properties are of special interest for the routing decisions:
** Path TQ: The path TQ towards the originator of the OGM multiplied with the best link TQ at the time of reception.
** Router's Sequence Number: The sequence number of the last accepted OGM received via the according router.
** TTL: The TTL of the last accepted OGM received via the according router.
* As well as all other properties of the OGM like:
** Interval, Flags, Gateway Flags, TT Num Changes, TT VN, TT CRC and a possible TT change entry (see [[Client-announcement]] for TT related field descriptions)


h2. 4. Protocol Procedure

h3. 4.1 Broadcasting own Originator Message (OGM)

Each node periodically (OGM interval) generates a single OGM which is broadcasted on all hard interfaces. A jitter may be applied to avoid collisions.

For the packet type definition see the [[packet-types]] page.

h3. 4.2. Receiving Originator Messages


Upon receiving an OGM a node must perform the following checks before the packet is further processed:

h4. 4.2.1. Preliminary Checks

The following checks are simple sanity checks which don't affect the routing logic: 

* *Version Check:* If the OGM contains a version which is different to the own internal version the message must be silently dropped (thus, it must not be further processed).
* *Source Check:* If the sender address of the OGM is an ethernet multicast (including broadcast) address the message must be silently dropped.
* *Destination Check* If the destination address of the OGM is a unicast address the message must be silently dropped.
* *Own Message Check:* If the originator address of the OGM is our own the message must be silently dropped as this OGM originated from this node.

h4. 4.2.2. Potential Router Checks

The following steps check whether the Neighbor we received the OGM from is a potential Router. 

If the OGM has not been dropped after these preliminary checks, the OGM will be modified in the following way to obtain the path TQ of the received OGM:
* *Update TQ:* The OGM's TQ field needs to be multiplied with the best link TQ towards the according neighbor. This new TQ value is further referenced as path TQ.

---> update internal stats
-------> check protection window
-------> drop ogm if seq num is old
-------> update neigh_ifinfo if seq_diff >= 0
-------> no average is performed on the global/path metric. We always use the latest value


After that, we check the OGM against the current data we have (currently selected router and current entry):

* If an originator entry matching the originator address of the OGM and a Selected Router exist:
** *drop if seqno smaller:* If the OGMs Sequence Number is smaller than the Selected Router's Sequence Number then the message must be silently dropped.
** *drop if not best router:* If the OGMs Sequence Number is equal or higher than the Selected Router's Sequence Number, but the the router is not our best router, the message must be silently dropped.
** *seqno same, but TQ smaller:* If the OGM's Sequence Number is equal to the Selected Router's Sequence Number and the OGM's path TQ is lower than the Selected Router's path TQ then the message must be silently dropped. 

If the OGM has not been dropped so far, we will further call this Neighbor a potential Router or just Router and will pass on to the Router Ranking.

h3. 5. Router Ranking

The Router Ranking checks whether just an according Router or even completely new Originator entry needs to be created or an already existing Router entry matching the Router we received this OGM from just updated. Or whether also the currently Selected Router needs to be switched. Furthermore step 5.2. will force relinquishing the so far Selected Router if its information became too old because of this OGM received via a Router other than the Selected Router.

If this OGM just results in updating a Router in the Router list which is not and not going to be the currently Selected Router, then no rebroadcasting of this OGM will take place in step 5.3. for now.

For the Router Ranking the following actions must be performed:

h4. 5.1. Creating or Updating Originator and Router Entries

The following steps need to be undertaken in the updating and creating process:

* If no originator entry matching the originator address of the OGM exists:
** Create a new originator entry with the originator address and originator's sequence number set to ones from the OGM.

* If no router entry matching the OGM's originator and the neighbor the OGM was received from exists:
** Create a new router entry with the Router Address set to the address of the Router we received the OGM from. Buffer the complete OGM in this entry. (TODO: really?)
** Unset this new router entry's Rebroadcasted flag.
* Otherwise:
** Delete the old buffered OGM and buffer this newly received OGM instead. (TODO: really?)
** Unset the Rebroadcasted flag in this matching router entry.

h4. 5.2. Purging Outdated Router Entries

It might happen that for instance from a certain Neighbor we would receive an OGM of perfect quality first and will chose that Router. However after that the path over that Selected Router could suddenly be jammed, leading to no more updates from that Router, resulting in a stale entry. Newer and newer (higher sequence number) OGMs might arrive over other potential Routers, but would never be chosen because of a path TQ never being better than perfect, highest path TQ of the currently Selected Router. Therefore we need to at some point consider this Selected Router as outdated and switch to one of the alternative Routers in our list which provide more up-to-date information. This is not being done time-based but based on the sequence number, a Selected Router may only be chosen if its OGM has not been older than OGM_SEQ_RANGE sequence numbers.

Note that a lower OGM_SEQ_RANGE favors choosing Routers with the most-up-to date information: This especially penalizes asymmetric links and paths - although we do not receive that many OGMs from such a Router with such an asymmetric path (showing a not that good receive quality), it might still be the best choice for transmitting our own data packets though. And could lead to fast route flapping also in symmetric topologies when OGMs in general have a low probability of arrival. However having a too large OGM_SEQ_RANGE might favor too old, outdated information too much, as described with the example before.

More precisely we have to:

* If the OGM's Sequence Number is newer than the Originator's Sequence Number:
** The new Originator's Sequence Number must be set to the Sequence Number contained in the received OGM.
** for all Routers of the OGM's originator: if the Originators Sequence Number is by OGM_SEQ_RANGE newer than the Routers Sequence Number, purge the router from the OGM's originator's Router List.

Note that this step can result in rebroadcasting an OGM in step 5.3. which is not the one we have actually received and are currently processing - which is intended: This incoming OGM might be the cause of purging outdated entries, however there might be still other Routers in the Router list which have a higher path TQ and are therefore more desirable to chose as the new Selected Router than the Router we received this OGM from.

h4. 5.3. Switching to (or Keeping) best Router

This step ensures a good Router selection to the best knowledge of a node. The Routers values are updated regardless whether it is the selected router or not. If the Rebroadcasted Flag is set for the selected router and the OGM was not received by this router, the OGM will not be rebroadcasted.

Specifically, we must undertake the following actions:

* Set the Selected Router to the Router with the highest path TQ.
* If the Selected Router's Rebroadcasted flag is not set:
** Rebroadcast the OGM of this Selected Router.
** Set the Selected Router's Rebroadcasted flag.

h4. 5.4. Purging non-potential Routers

To keep the routers list short and clean, we will purge routers with old sequence numbers which are not the selected router or have a lower TQ. These Routers are obsolete and will not be chosen in the future.

If an OGM was rebroadcasted in the previous step:
* Purge all routers with a sequence number smaller than the Selected Router's Sequence Number.
* Purge all routers with a sequence number equal to the Selected Router's Sequence Number and a path TQ smaller than the Selected Router's path TQ.

Note: If no OGM was rebroadcasted in the previous section then no purging will be done in this section anyways. (TODO: can we skip this condition?)

h3. 6. Re-broadcasting other nodes' OGMs

When an OGM is to be re-broadcasted some of the message fields must be changed others must be left unchanged.  All fields not mentioned in the following section remain untouched:

* The TTL must be decremented by one. If the TTL becomes zero (after the decrementation) the packet must be dropped.
* The hop penalty must be applied on the OGM's TQ field.  If the OGM's TQ becomes zero (after hop penalty) the packet must be dropped. The hop penalty is applied by reducing the path TQ by HOP_PENALTY percent.

Note: The Hop penalty is especially required in loss-less networks where shorter path should be favored. It is also useful to select the shortest path in lossy networks where the TQ values are very similar.


h2. 8. Proposed Values for Constants


OGM_SEQ_RANGE: 5

TQ_MAX: 0xFF

h2. Appendix


----

h1. Questions

* Where to add the description of the data packet forwarding + bonding mode description? Which object should the bonding interface stuff be added to?
* Should the further optimization 'Resend OGMs with flags etc. of newest OGM' already be part of the standard?

----

h1. Notes

* 'Router Ranking' purges routers that are outdated in terms of sequence number and selects the routers with the highest path TQ. It further updates the status of the according router the OGm was received from.
* With the simple ELP link quality handling the EIGRP/BABEL feasibility is not necessary as any router we could switch to due to EIGRP feasibility but not due to DSDV feasibility is actually a _worse_ choice as that router would have a lower path TQ.
* The ELP link quality information could possibly be made more use of. For now, it is always applied very early when receiving the OGM and never considered anymore. It could allow us to (a) switch to another router when the link quality of our currently selected router got worse without needing a higher sequence number of the other router (with the help of EIGRP feasibility). Or (b) allow us to avoid switching to a new, other router upon receiving an OGM from a router other than our selected router because the link quality towards our currently selected router (and therefore its path TQ) increased a lot since we last received the OGM of our currently selected router. So there is potential to optimize things within the _same_ sequence number, but that'd make things more complex and error prune of course. The way it is stated here for BATMAN V at the moment should be rather straight-forward and clear and make it rather unlikely that we'd miss a case where a routing loop could occure (both conception and implementation wise).
* OGM_SEQ_DIFF: The larger, the more we are (a) relying on / sticking to maybe outdated path TQ information and (b) giving asymmetric links a chance to being chosen as a route, (c) possibly reducing route flapping towards asymmetric links and (d) possibly reducing route flapping in low path TQ topologies where only every X OGMs arrive anyway.
* (If a node does not rebroadcast OGMs, it could safely switch the route to any neighbor at any time; if it only rebroadcasts some, it might switch to some other routers more often - routes are getting EIGRP feasible more often. Maybe some potential to optimize things in the 'Router Ranking here later?)

----

h1. Changes between OGMs in BATMAN IV and BATMAN V

h2. Renaming

* Global TQ renamed to Path TQ
* Local TQ renamed to Link TQ

h2. Removal of Global TQ Window and gl. TQ Averaging

Only remember last Path TQ and its sequence number as well as the highest
sequence number of an originator node received. The window size is substituted by a
SEQ_DIFF_MAX (default: 5). A neighbor node is being purged from the router list
if orig_node->last_seqno - router->last_seqno > SEQ_DIFF_MAX.

h2. Removed previous sender field

h2. Bonding Mode using ELP's link qualities

h2. Removal of secondary interface originators

Instead when receiving an OGM, always the best link quality measured by ELP
will be substracted from the OGM. This shall make multiple interfaces
transparent from the OGM algorithm.

h2. Removal of PRIMARIES_FIRST_HOP + DIRECTLINK flag

PRIMARIES_FIRST_HOP flag is no more needed as there will be just one primary originator a.k.
originator.

h2. Removal of bidirectional link check

Asymetric Penalty should be better and enough.

h2. (Re)Introduce strict OGM forwarding policy

To avoid routing loops. MGO/batping mechanism will compensate for convergence speed performance.

h2. Optimized Route Switching in case of outdated currently selected router

Before in BATMAN IV if a node was receiving an OGM with a sequence number that caused the
currently selected router to be moved outside of the global TQ window (e.g. receiving an
OGM with an originator's sequence number + 5) the route were switched to the router this
OGM just came from. However although the sequence number is very new and ensures loop-freeness,
the global TQ via this hop might be very low and therefore this router being a bad choice.
As the now newly selected, possibly bad router has the highest sequence number, it is
more "difficult" than necessary for another, better neighbor to become the new router.

In BATMAN V, when the sequence number of the currently selected router becomes too low,
a node may switch to a different router, a neighbor other then the one we just received the OGM from:
It will switch to the router with the highest path TQ which is still in the OGM_SEQ_DIFF_LIMIT
and rebroadcast its buffered OGM instead of the just received OGM. The just received OGM will
still be buffered (router-addr + seqno + path-TQ) though.

----

h1. Further Ideas for Optimizations

h2. Resend OGMs with flags etc. of newest OGM

An accepted router with the highest sequence number has the most up-to-date information about 'Flags', 'Gateway Flags' (and also TT *?), they do not have to be stored once per router, once per originator entry is enough. And any rebroadcasted OGM could update these fields from the most-up-to-date router. Might make things a little more "complex".

h2. Also aggregate different packet types

For instance ELP + OGMs to reduce number of packets sent.

h2. Positive Feedback OGM rebroadcasting

When for any originator thes compared to the link quality used for the last rebroadcasted OGM, resend the same OGM but with the path TQ multiplied with the new, better link TQ value instead.

h2. No OGMs if no hosts

To be able to reduce the overhead by just putting some intelligent "repeater" nodes somewhere without them sending their own OGMs 
