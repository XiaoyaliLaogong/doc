h1. Originator Message (OGM)

??This page is work-in-progress and will state the BATMAN V algorithm later.??
It is a rework based on the original [[OGM]] page and will supercede it after completion.

h2. 1. Introduction

[[batman_v|B.A.T.M.A.N. V]] uses the Originator Messages 2 (OGM2) to make routing decisions and  transport information about mesh participants through the whole mesh. It is complemented by the [[ELP|Echo Location Protocol(ELP)]] which is used for neighbor sensing. The previous versions of the B.A.T.M.A.N. protocols (version I to IV) used the original OGM messages for both neighbor sensing and route finding.

The new OGM2 protocol bears the following advantages:

 * Reduced overhead, as OGMs can then be sent with a slower interval. The BATMAN routing algorithm still has a squared amount of overhead in worst case scenarios, therefore the the slower intervals are very desireable.
 * Neighbor sensing and metric data collection can be performed individually, at different intervals or even different techniques
 * Efforts for multiple interfaces handling can be reduced
 * The BATMAN core routing protocol becomes less entangled with other mechanisms and features, making it easier understand and to perform theoretical analysis on.

h2. 2. Definitions

* Node - A mesh router which utilizes the B.A.T.M.A.N. protocol as specified in this document on at least one network interface.
* originator - A node broadcasting its own OGMs that is therefore addressable within the mesh network routing layer. It is uniquely identifiable by its originator address. B.A.T.M.A.N.-Advanced uses the MAC address of its primary hard interface.
* hard interface - Network interface utilized by B.A.T.M.A.N. for its own ethernet frames.
* sliding window - Sequence numbers are recorded in dedicated sliding windows until they are considered out-of range. Thus, such a sliding window always contains the set of recently received sequence numbers. The amount of sequence numbers recorded in the sliding window is used as a metric for the quality of detected links and paths.
* duplicate - A received OGM message from a neighbor containing an already received sequence number.
* out of order - A received OGM message from a neighbor containing a sequence number that is older than the newest sequence number ever received from this neighbor.
* Neighbor: An originator within one hop distance.
* Router: A neighbor which is a potential, loop-free next hop for forwarding data packets towards a specific originator.
* link throughput: link throughput from one interface to a neighbor's interface (see [[ELP]] for details).
* best link throughput: The best of all link throughput values towards a neighbor (see [[ELP]] for details).
* path throughput:  The incoming OGM's throughput combined with the best link throughput of the according neighbor.
* Originator entry: Local data structure in the originator list (see 'Conceptual Data Structures' for details).
* Router entry: Local data structure in the router list (see 'Conceptual Data Structures' for details).

Throughputs are specified in units of 100 kbit/s.

h2. 3. Conceptual Data Structures

h3. 3.1. Originator List

An originator list holds all addressable and to a certain degree reachable originators within the mesh network. The Originator Address and Selected Router fields of this list are of special interest for the actual routing decisions upon incoming data packets.

* Originator Address: The originator address of the node.
* Originator's Sequence Number: The newest OGM Sequence Number that has been accepted from the given Originator.
* Router List: A list of potential routers towards an originator
* Selected Router: A router from the Router List which is chosen as the next hop to forward data packets to for the according originator.

h3. 3.2 Router List

A router list holds all potential routers, routers that might be switched to at any time without creating a routing loop. An entry buffers the newest, valid OGM2 from the according router and according originator of the OGM2 to be able to rebroadcast an OGM2 later when switching to another potential router.

* Router Originator Address: Originator address of the router an OGM2 was received from.
* Rebroadcasted: This flag indicates whether the current Router Entry settings have been rebroadcasted yet.
* Received OGM, the following properties are of special interest for the routing decisions:
** Path throughput: The path throughput towards the originator of the OGM2 multiplied with the best link throughput at the time of reception.
** Router's Sequence Number: The sequence number of the last accepted OGM received via the according router.
** TTL: The TTL of the last accepted OGM2 received via the according router.
* As well as all other properties of the OGM2 like:
** Interval, Flags, Gateway Flags, TT Num Changes, TT VN, TT CRC and a possible TT change entry (see [[Client-announcement]] for TT related field descriptions)

h2. 4. Protocol Procedure

h3. 4.1 Broadcasting own Originator Message 2 (OGM2)

Each node periodically (OGM interval) generates a single OGM which is broadcasted on all hard interfaces. A jitter may be applied to avoid collisions.

+The Originator Message 2 (OGM2) Format:+

 * Packet type: Initialize this field with the ELP packet type.
 * Version: Set your internal compatibility version.
 * TTL: Initialize with BATADV_TTL
 * Flags: not used
 * Sequence number: On first broadcast set the sequence number to an arbitrary value and increment the field by one for each following OGM2.
 * Originator Address: Set this field to the primary MAC address of this B.A.T.M.A.N. node.
 * TVLV length: Length of the TLVL data appended to the OGM
 * Throughput: Throughput metric value in 100 kbit/s. Initialize with BATADV_THROUGHPUT_MAX_VALUE
 * TVLV data: Appended TVLV data for the originator. See [[TVLV]] for a detailed description.

<pre>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Packet Type   |    Version    |      TTL      |   Flags       |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                       Sequence Number                         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                     Originator Address                        |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |  (cont'd) Originator Address  |  TVLV length                  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                         Throughput                            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                        TVLV data ...                          |
</pre>


h3. 4.2. Receiving Originator Messages


Upon receiving an OGM a node must perform the following checks before the packet is further processed:

h4. 4.2.1. Preliminary Checks

The following checks are simple sanity checks which don't affect the routing logic: 

* *Version Check:* If the OGM contains a version which is different to the own internal version the message must be silently dropped (thus, it must not be further processed).
* *Source Check:* If the sender address of the OGM is an ethernet multicast (including broadcast) address the message must be silently dropped.
* *Destination Check* If the destination address of the OGM is a unicast address the message must be silently dropped.
-----> in the future we might want to use unicast OGM, therefore we should alter this check by also allowing unicast to our address.
* *Own Message Check:* If the originator address of the OGM is our own the message must be silently dropped as this OGM originated from this node.

h4. 4.2.2. Potential Router Checks

The following steps check whether the Neighbor we received the OGM from is a potential Router. 

If the OGM has not been dropped after these preliminary checks, the OGM will be modified in the following way to obtain the path TQ of the received OGM:
* *Update TQ:* The OGM's TQ field needs to be multiplied with the best link TQ towards the according neighbor. This new TQ value is further referenced as path TQ.

---> update internal stats
-------> check protection window
-------> drop ogm if seq num is old
-------> update neigh_ifinfo if seq_diff >= 0
-------> no average is performed on the global/path metric. We always use the latest value


After that, we check the OGM against the current data we have (currently selected router and current entry):

* If an originator entry matching the originator address of the OGM and a Selected Router exist:
** *check protection window*
** *drop if seqno smaller:* If the OGMs Sequence Number is smaller than the Selected Router's Sequence Number then the message must be silently dropped.
** *update internal stats*
** *check if we have a route towards this neighbour*
** *seqno same, but metric smaller:* If the OGM's Sequence Number is equal to the Selected Router's Sequence Number and the OGM's path TQ is lower than the Selected Router's path TQ then the message must be silently dropped. 
----> perform route update
** *drop if not best router:* If the OGMs Sequence Number is equal or higher than the Selected Router's Sequence Number, but the the router is not our best router, the message must be silently dropped.

If the OGM has not been dropped so far, we will further call this Neighbor a potential Router or just Router and will pass on to the Router Ranking.

h3. 5. Router Ranking

The Router Ranking checks whether just an according Router or even completely new Originator entry needs to be created or an already existing Router entry matching the Router we received this OGM from just updated. Or whether also the currently Selected Router needs to be switched. Furthermore step 5.2. will force relinquishing the so far Selected Router if its information became too old because of this OGM received via a Router other than the Selected Router.

If this OGM just results in updating a Router in the Router list which is not and not going to be the currently Selected Router, then no rebroadcasting of this OGM will take place in step 5.3. for now.

For the Router Ranking the following actions must be performed:

h4. 5.1. Creating or Updating Originator and Router Entries

The following steps need to be undertaken in the updating and creating process:

* If no originator entry matching the originator address of the OGM exists:
** Create a new originator entry with the originator address and originator's sequence number set to ones from the OGM.

* If no router entry matching the OGM's originator and the neighbor the OGM was received from exists:
** Create a new router entry with the Router Address set to the address of the Router we received the OGM from. Buffer the complete OGM in this entry. (TODO: really?)
** Unset this new router entry's Rebroadcasted flag.
* Otherwise:
** Delete the old buffered OGM and buffer this newly received OGM instead. (TODO: really?)
** Unset the Rebroadcasted flag in this matching router entry.

h4. 5.2. Purging Outdated Router Entries

It might happen that for instance from a certain Neighbor we would receive an OGM of perfect quality first and will chose that Router. However after that the path over that Selected Router could suddenly be jammed, leading to no more updates from that Router, resulting in a stale entry. Newer and newer (higher sequence number) OGMs might arrive over other potential Routers, but would never be chosen because of a path TQ never being better than perfect, highest path TQ of the currently Selected Router. Therefore we need to at some point consider this Selected Router as outdated and switch to one of the alternative Routers in our list which provide more up-to-date information. This is not being done time-based but based on the sequence number, a Selected Router may only be chosen if its OGM has not been older than OGM_SEQ_RANGE sequence numbers.

Note that a lower OGM_SEQ_RANGE favors choosing Routers with the most-up-to date information: This especially penalizes asymmetric links and paths - although we do not receive that many OGMs from such a Router with such an asymmetric path (showing a not that good receive quality), it might still be the best choice for transmitting our own data packets though. And could lead to fast route flapping also in symmetric topologies when OGMs in general have a low probability of arrival. However having a too large OGM_SEQ_RANGE might favor too old, outdated information too much, as described with the example before.

More precisely we have to:

* If the OGM's Sequence Number is newer than the Originator's Sequence Number:
** The new Originator's Sequence Number must be set to the Sequence Number contained in the received OGM.
** for all Routers of the OGM's originator: if the Originators Sequence Number is by OGM_SEQ_RANGE newer than the Routers Sequence Number, purge the router from the OGM's originator's Router List.

Note that this step can result in rebroadcasting an OGM in step 5.3. which is not the one we have actually received and are currently processing - which is intended: This incoming OGM might be the cause of purging outdated entries, however there might be still other Routers in the Router list which have a higher path TQ and are therefore more desirable to chose as the new Selected Router than the Router we received this OGM from.

h4. 5.3. Switching to (or Keeping) best Router

This step ensures a good Router selection to the best knowledge of a node. The Routers values are updated regardless whether it is the selected router or not. If the Rebroadcasted Flag is set for the selected router and the OGM was not received by this router, the OGM will not be rebroadcasted.

Specifically, we must undertake the following actions:

* Set the Selected Router to the Router with the highest path TQ.
* If the Selected Router's Rebroadcasted flag is not set:
** Rebroadcast the OGM of this Selected Router.
** Set the Selected Router's Rebroadcasted flag.

h4. 5.4. Purging non-potential Routers

To keep the routers list short and clean, we will purge routers with old sequence numbers which are not the selected router or have a lower TQ. These Routers are obsolete and will not be chosen in the future.

If an OGM was rebroadcasted in the previous step:
* Purge all routers with a sequence number smaller than the Selected Router's Sequence Number.
* Purge all routers with a sequence number equal to the Selected Router's Sequence Number and a path TQ smaller than the Selected Router's path TQ.

Note: If no OGM was rebroadcasted in the previous section then no purging will be done in this section anyways. (TODO: can we skip this condition?)

h3. 6. Re-broadcasting other nodes' OGMs

When an OGM is to be re-broadcasted some of the message fields must be changed others must be left unchanged.  All fields not mentioned in the following section remain untouched:

* The TTL must be decremented by one. If the TTL becomes zero (after the decrementation) the packet must be dropped.
* The forward penalty (link/hop penalty) must be applied on the OGM's metric field. If the link is full duplex or the link metric is below 1Mbps we apply the hop penalty, otherwise we apply the half duplex one. The hop penalty is applied by reducing the path TQ by HOP_PENALTY percent.

Note: The Hop penalty is especially required in loss-less networks where shorter path should be favored. It is also useful to select the shortest path in lossy networks where the TQ values are very similar.

h2. 8. Values for Constants

OGM_SEQ_RANGE: 5
BATADV_THROUGHPUT_MAX_VALUE: 0xFFFFFFFF
BATADV_TTL: 50