h1. Bonding and interface alternating

Mesh nodes with multiple physical links to other mesh nodes can use this capability to gain various benefits, for example:

 * bonding: use multiple links for the same data stream to boost bandwidth
 * interface alternating: send on other interfaces (and therefore other channels, if configured correctly) to minimize multihop bandwidth degradation

These features are based on two facts:

 * multiple links exist between two neighbors, and
 * the routing decision is independent of the link a packet is received

Notably, these multi-interface features are independent of B.A.T.M.A.N. and could work with any routing algorithm/metric. The routing software only needs to detect that multiple peers belong to the same neighbor mesh node. This is also not related to Multi Path Routing, which would require multiple independent links.

Bonding and Interface Alternating works in following steps:

# detect that a neighbor is reachable via multiple links
# select suitable candidates among the the available links
# use these multiple links for various manipulations

h2. Link detection

The detection part is specific to batman-adv. The first interface in batman-adv is the primary interface - it's MAC address (Originator address) is known throughout the mesh. The mesh node sends out the OGMs from the primary interface on *all* interfaces, with a high TTL. In this way, also mesh nodes only reachable via the secondary interfaces will know about this host. Secondary interfaces are all other interfaces. The secondary interfaces send out their own OGMs with low TTL, which only serve the purpose of local link detection, and are only sent on their respective interfaces.

Note that it does not matter which interface is the primary interface, it is only used to have a single Originator known in the mesh (and thus avoid too much OGM overhead).

!primary_flag.png!

The PRIMARIES_FIRST_HOP flag is only set for OGMs of the primary interface, and only on the first hop - it is unset when rebroadcasted by another node.

When OGMs with PRIMARIES_FIRST_HOP flag are received on different interfaces, a mesh node knows that it can reach his neighbor via multiple links. In the illustration, A receives the OGM via A1 (sent out by B1) and A2 (sent out by B2) - and detects that these two Links A1-B1, A2-B2 exist. These link candidates are stored and further filtered

h2. Candidate selection

To be usable for the target features, the links must have a similar quality and should operate on a different frequency. Therefore, in batman-adv only links are further considered if:

 * the link quality is not much worse than the best link within a certain TQ threshold (now: 50) 
 * the link destination is different from the other already selected candidates - e.g. if A1-B1 was selected, A2-B1 would be forbidden as they would operate on the same frequency and therefore would interfere with each other

In the illustration below, A1-B1 and A2-B2 meet this criteria and are therefore selected as candidates.

!interface_detection.dia.jpg!

Implementation note: Detected links are internally stored within the originator structure of the primary originator. The candidates are internally called "bonding candidates"

h2. Using the candidates

Once a neighbor mesh node has been selected by the classic routing algorithm, the individual links can now be equally be selected to send data to the next neighbor without tampering with routing. Possible mechanisms exploiting this fact are described below.

Implementation note: the manipulations are hooked in the tx path when selecting a neighbor in find_router()

h3. Interface Alternating

Interface Alternating basically tries to forward a packet on another interface than on which the frame was received. This is only done if suitable candidate with another source interface exists.

!alternation_chain.dia.jpg!

This feature is always enabled.

h3. Bonding

In bonding, we split a single stream and distribute the packets over multiple links. Packets are sent in a round-robin fashion over the available candidates. This can be used to increase the throughput for data streams from node A to node B. In a perfect environment the throughput is n times higher, where n is the number of candidates.

!bonding_roundrobin.dia.jpg!

Practice shows however that the theoretical bandwidth gain is not reached - even if the links are physically disjoint. E.g. using a 2.4 GHz and a 5 GHz with a modulation of 54 Mbit/s both has shown to gain 150%25 bandwith boost over a single link, not 200%25 as expected in theory. Possible reasons may be the packet reordering and slightly different queue load caused by random backoffs, retries, etc. For these reasons, bonding must be enabled explicitly.

h2. Discussion and further work

As explained, the bonding mode stays behind the theoretical expectations. The packet loss based TQ metric is also not optimal for selecting bonding candidates - a bandwidth based metric would be more suitable for this task, as slow links will slow down the whole aggregated connection.

These shortcomings would be subject to further improvements of this featureset.