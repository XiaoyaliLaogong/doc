h1. Fragmentation

This page describes the current status of the GSOC12 project to improve the fragmentation functionality to support more than just unicast packets.

h2. "New" Implementation

h3. The initial requirements to the new fragmentation framework are:

* One packet can be transmitted as two or more fragments.
* Fragments are encapsulated with a "fragment header".
* Nodes announce through tvlv if they are able to assemble fragments.
* Fragmentation of broadcasts might be supported in the future.
* Maximum fragment size is runtime configurable to support user tuning.
* Fragments are assembled as soon as the outgoing interface supports the assembled size - forwarded otherwise.
* The type of the contained packet is not stored in the fragment header, as needing functions should peek into the payload.
* All packets except broadcast/multicast are fragmented (for now).

h3. The following questions are open:

* How is the buffer for received packets structured?
** A single linked list per orig might be slow to traverse in the search for fragments from a specific set.
** A hashtable is fast but big.