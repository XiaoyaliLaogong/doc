h1. Catwoman

When forwarding packets in a wireless mesh network, airtime can be saved by exploiting the information already present at the destinations of a forward. One way of doing this is _Network Coding_, where two packets are XOR'ed together before transmission. To extract one of the included packets, the destination must simply XOR the network coded packet with the other included packet:

<pre>
  (p1 XOR p2) XOR p2 = p1
</pre>

For more information about the concept, read the news item about [[open-mesh:2011-08-18-network-coding-first-steps|Batman and Catwoman]].

h2. Implementation Details

The implementation is based on 5 steps:

# *Detect neighbors that are in range of each other*: This enables the relay to determine if a neighbor is likely to overhear packets from another neighbor.
# *Hold back unicast packets before forwarding*: To get two packets to code, one must be buffered until the next arrives.
# *Code and transmit combined packet*: This step searches the buffer with packets to be forwarded and checks if the destinations will be able to decode.
# *Save overheard and transmitted packets*: To decode a a packet, the receiver must know one of the two combined packets, which can either originate from the receiver itself or be sniffed from another neighbor.
# *Receive and decode network coded packet*: When receiving a coded packet, the overheard and saved packets are searched for the packet needed to decode.

Each step is explained in detail in the following sections.

h3. Detect neighbors in range of each other

A relay node exploits the TTL field of OGMs to detect when two neighbors are in range of each other:

Node A emits an OGM, which is received by Node B and Node R.
!ogm_step1.png!

Node B decreases the TTL retransmits the OGM from Node A. The OGM is again received by Node R, who compare the TTL of the two received OGMs.
 !ogm_step2.png!

If the difference if only 1, Node R can conclude that Node B is in range of Node A.

h2. Required Work

To make the implementation of catwoman complete, the following features must be implemented:
* -Remove outdated nodes from the list of coding neighbors periodically.-
* Support fragmented unicast packets.
* -Use the link quality of overhearing links when looking for coding opportunities.-
* -Support configuration with batctl.-
* -Use bat_dbg instead of printk.-
* Support setups with multiple interfaces. (Need to make sure that nc_nodes are on the same interface.)
* -Maintain ref-counters for struct orig_node.-
* -Refactor code into three files: catwoman.c, coding.c, and decoding.c-
* -Remove nc_path after a certain timeout.-
* Determine allowed holding times based on the tick time of the system.
* -Collect nc-related members of bat_priv in a nc-struct.-

h2. Ideas

* Send coded packets containing redundant packets to improve reliability.
* Support the cross topology where more than two destinations are coded.
* Implement Random Linear Network Coding (RLNC) on packets from the same flow, also to improve reliability.
* -Use checksums instead of packet_id's to identify decoding packets.-
* Implement a "catwoman-support"-flag in OGM to allow mixing of nodes with and without catwoman enabled.
* -Refactor function names and variables to cw_* (or nc_*) instead of catwoman_* and coding_*.-