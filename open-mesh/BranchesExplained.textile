= Branches Explained =
In 2007 many new branches were created and many numbers are floating around which caused much confusion. Here comes a brief summary why these branches and numbers were created, what they are good for and who is behind it:

Whenever we mention Roman numerals (as II or III) we speak of B.A.T.M.A.N.'s routing algorithm version. It describes how the routing information are flooded and how they are handled to make the best routing decission possible.

Arabic numerals are used to distinguish the version of our implementation. Next to the routing algorithm many features and goodies are added to simplify the users life.

Example: batman 0.2 uses the B.A.T.M.A.N. III routing algorithm.

=== batman-0.3 ===
Maintainer: Marek Lindner, Andreas Langer

The 0.3 branch brought a bunch of new features and updates to 0.2, especially the 0.2 routing alorithm was dropped in favor of a newly designed approach. 

=== batman-experimental (aka bmx) ===
Maintainer: Axel Neumann

This branch kept the 0.2 routing algorithm and tried to overcome its flaws by extending it. Despite its name it is neither specifically unstable nor contains the latest features for the 0.3 branch (we are not debian ;-) ). Under the hood it shares much code with 0.3 - not more or less.

=== batman-advanced (aka batman-adv-kernelland) ===
Maintainer: Marek Lindner, Simon Wunderlich

In April 2007 batman advanced (residing in user space) came to light. It uses the routing algorithm of batman 0.3, but instead of sending UDP packets and manipulating routing tables, it provides a virtual network interface and transparently transports packets on its own. It builds a switch of all your nodes and enables you to run any Layer 3 (and Ethernet Layer 2) protocols, like IPv4, IPv6, DHCP, IPX.., on top of it.

Due to the testing we realized that the layer 2 proof of concept implementation in user space suffered from many performance problems. In late 2007 we ported our layer 2 implementation to kernel space in form of a kernel modul. 

=== batman-adv-userspace ===
Maintainer: Simon Wunderlich, Marek Lindner

batman advanced userspace was the first implementation of the batman-advanced idea, used as proof of concept. However the virtual interface in userspace imposed a significant overhead for low-end wireless access points, so we decided to re-implement batman-advanced as kernel module which is now batman-adv-kernelland.

=== battools ===
Maintainer: Andreas Langer

The battools are a set of debugging tools which work together with our layer 2 implementation (user space and kernel land). You can use them to debug the mesh which proved to be difficult without them.

=== batman-0.2 (outdated) ===
Maintainer: Marek Lindner, Axel Neumann

0.2 stable was created last summer and represents our implementation of the BATMAN III routing algorithm. It works quite well and stable but has a major flaw while routing strong asymetric links. That is why we began working on a new algorithm - 0.2 is to be deprecated soon.

